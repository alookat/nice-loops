require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];



},{}],"page1module":[function(require,module,exports){
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

exports.page1module = (function(superClass) {
  var IF_lets_you_create, byIFTTT, calendar, facebook, gmail, instagram, iphone, page1, rss_feed, soundcloud, stocks, weather;

  extend(page1module, superClass);

  function page1module() {
    return page1module.__super__.constructor.apply(this, arguments);
  }

  page1 = new Layer({
    backgroundColor: "transparent",
    width: 640,
    height: 1334,
    x: 0,
    superLayer: page.content
  });

  iphone = new Layer({
    y: 82 * 2,
    width: 150 * 2,
    height: 300 * 2,
    image: "images/phone.png",
    superLayer: page1
  });

  iphone.centerX();

  IF_lets_you_create = new Layer({
    y: 402 * 2,
    width: 470,
    height: 130,
    image: "images/IF_lets_you_create.png",
    superLayer: page1
  });

  IF_lets_you_create.centerX();

  byIFTTT = new Layer({
    y: 491 * 2,
    width: 98 * 2,
    height: 30 * 2,
    image: "images/byIFTTT.png",
    superLayer: page1
  });

  byIFTTT.centerX();

  instagram = new Layer({
    x: 55 + 25 * 2,
    y: 199 * 2,
    width: 55 * 2,
    height: 55 * 2,
    image: "images/instagram.png",
    index: 2
  });

  rss_feed = new Layer({
    x: 55 + 45 * 2,
    y: 264 * 2,
    width: 36 * 2,
    height: 36 * 2,
    image: "images/rss_feed.png",
    index: 1
  });

  weather = new Layer({
    x: 55 + 37 * 2,
    y: 130 * 2,
    width: 62 * 2,
    height: 62 * 2,
    image: "images/weather.png",
    index: 1
  });

  facebook = new Layer({
    x: 55 + 241 * 2,
    y: 120 * 2,
    width: 27 * 2,
    height: 27 * 2,
    image: "images/facebook.png",
    index: 1
  });

  gmail = new Layer({
    x: 55 + 270 * 2,
    y: 175 * 2,
    width: 31 * 2,
    height: 23 * 2,
    image: "images/gmail.png",
    index: 1
  });

  calendar = new Layer({
    x: 55 + 203 * 2,
    y: 165 * 2,
    width: 55 * 2,
    height: 50 * 2,
    image: "images/icon_calendar.png",
    index: 2
  });

  stocks = new Layer({
    x: 55 + 230 * 2,
    y: 219 * 2,
    width: 61 * 2,
    height: 61 * 2,
    image: "images/stocks.png",
    index: 1
  });

  soundcloud = new Layer({
    x: 55 + 246 * 2,
    y: 292 * 2,
    width: 40 * 2,
    height: 40 * 2,
    image: "images/soundcloud.png",
    index: 1
  });

  return page1module;

})(Layer);



},{}]},{},[])
//# sourceMappingURL=data:application/json;base64,
